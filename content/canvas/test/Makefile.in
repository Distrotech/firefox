#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# SkiaGL on Android/Gonk does not implement these composite ops yet
ifneq (1_Linux,$(MOZ_SUITE)_$(OS_ARCH))
# This test fails in Suite on Linux for some reason, disable it there
MOCHITEST_FILES += test_2d.composite.uncovered.image.destination-atop.html
endif

# xor and lighter aren't well handled by cairo; they mostly work, but we don't want
# to test that
#	test_2d.composite.solid.xor.html \
#	test_2d.composite.solid.lighter.html \
#	test_2d.composite.transparent.xor.html \
#	test_2d.composite.transparent.lighter.html \
#	test_2d.composite.image.xor.html \
#	test_2d.composite.image.lighter.html \
#	test_2d.composite.canvas.xor.html \
#	test_2d.composite.canvas.lighter.html \
#	test_2d.composite.clip.xor.html \
#	test_2d.composite.clip.lighter.html \
#

# Tests that fail on Mac (possibly because spec is underdefined?).  Bug 407105
ifneq ($(MOZ_WIDGET_TOOLKIT),cocoa)
# XXX vlad don't test these anywhere, cairo behaviour changed
MOCHITEST_FILES += \
	test_2d.line.join.parallel.html \
	$(NULL)

ifneq ($(MOZ_WIDGET_TOOLKIT), android)
ifneq ($(MOZ_WIDGET_TOOLKIT), gonk)
# This is an issue with Quartz's handling of radial gradients and some numeric
# imprecision that results in errors here. SkiaGL (on Android/Gonk) also has
# a similar problem.
MOCHITEST_FILES += \
	test_2d.gradient.radial.inside2.html \
	test_2d.gradient.radial.inside3.html \
	test_2d.gradient.radial.outside1.html \
	test_2d.gradient.radial.cone.front.html \
	test_2d.gradient.radial.cone.top.html \
	$(NULL)
endif
endif

# This is another Quartz bug -- closed paths that don't lie fully within the
# destination bounds seem to have problems with the BEVEL/SQUARE join/cap combo.
# The joins are rendered as if with MITER; the correct behaviour is also seen
# if BUTT is used instead of SQUARE.
MOCHITEST_FILES += test_2d.line.cap.closed.html

endif

# Tests that fail on non-Mac (bug 407107)
ifeq ($(MOZ_WIDGET_TOOLKIT),cocoa)

# still need bug numbers
MOCHITEST_FILES += \
	test_2d.composite.uncovered.fill.source-in.html \
	test_2d.composite.uncovered.fill.destination-in.html \
	test_2d.composite.uncovered.fill.source-out.html \
	test_2d.composite.uncovered.fill.destination-atop.html \
	test_2d.composite.uncovered.pattern.source-in.html \
	test_2d.composite.uncovered.pattern.destination-in.html \
	test_2d.composite.uncovered.pattern.source-out.html \
	test_2d.composite.uncovered.pattern.destination-atop.html \
	$(NULL)

# still need bug numbers
MOCHITEST_FILES += \
	test_2d.gradient.radial.outside2.html \
	test_2d.gradient.radial.outside3.html \
	$(NULL)

# still need bug numbers
MOCHITEST_FILES += test_2d.path.arc.shape.3.html

MOCHITEST_FILES += test_2d.path.rect.selfintersect.html
endif

# These tests only pass on Mac OS X >= 10.5; see bug 450114
# test_2d.gradient.radial.touch1.html \
# test_2d.gradient.radial.touch2.html \
# test_2d.gradient.radial.touch3.html \
# test_2d.gradient.radial.equal.html \

# These tests do not pass on any platform; Quartz backend won't pass them
# because we fall back to pixman when one circle doesn't contain the other.
# See bug 512647.
#	test_2d.gradient.radial.cone.shape2.html \
#	test_2d.gradient.radial.cone.behind.html \
#	test_2d.gradient.radial.cone.beside.html \

# This test is bogus according to the spec; see bug 407107
# test_2d.path.rect.zero.6.html

# split up into groups to work around command-line length limits
